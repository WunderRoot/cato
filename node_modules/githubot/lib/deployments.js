
  module.exports = function(repo, cb) {
    var self;
    var _this = this;
    self = this.withOptions({
      apiVersion: 'cannonball-preview'
    });
    if (cb != null) {
      return self.get("repos/" + (self.qualified_repo(repo)) + "/deployments", cb);
    } else {
      return {
        create: function(branchName, opts, cb) {
          var body, _ref;
          if (cb == null) _ref = [{}, opts], opts = _ref[0], cb = _ref[1];
          body = {
            ref: branchName != null ? branchName : "master"
          };
          if (opts.force != null) body.force = opts.force;
          if (opts.payload != null) body.payload = opts.payload;
          if (opts.auto_merge != null) body.auto_merge = opts.auto_merge;
          if (opts.description != null) body.description = opts.description;
          return self.post("repos/" + (self.qualified_repo(repo)) + "/deployments", body, function(data) {
            return cb({
              sha: data.sha,
              description: data.description,
              url: data.url
            });
          });
        },
        status: function(id, cb) {
          return self.get("repos/" + (self.qualified_repo(repo)) + "/deployments/" + id + "/statuses", cb);
        }
      };
    }
  };
